let ProjectItem = React.createClass({
    onUpdate(item) {
        this.props.initUpdate(item);
    },
    projectItemHandleDelete() {
      this.props.projectItemHandleDelete();
    },
    render() {
        let project  = this.props.project;
        let title = project.title;
        let progress = project.progress;
        let description = project.description;

        let image = project.cover_image == null?
                    {
                        backgroundImage: 'url(<%= asset_path('image-placeholder.svg') %>)',
                        backgroundSize: 'cover',
                        backgroundColor: '#DCDAD2',
                        backgroundPosition: 'center'
                    }:
                    {
                        backgroundImage: 'url(/assets/'+project.cover_image+')',
                        backgroundSize: 'cover'
                    }


        function getProgress(progress) {
            let pgDesc = '';
            if(progress >= 0 && progress < 50) {
                pgDesc = 'progress-bar-danger'
            } else if (progress >= 50 && progress < 80) {
                pgDesc = 'progress-bar-warning'
            } else if (progress >= 80 && progress <= 100)  {
                pgDesc = 'progress-bar-success'
            } else {
                pgDesc = 'progress-bar-danger'
            }
            return pgDesc;
        }

        return(

            <div className="col-md-3 col-xs-12 col-ms-12 project-item">
              <div className="circle-edit-project">
                <a href={"#editProject" + project.id} data-toggle="modal" className="edit-project-a">
                  <span className="genicon-pencil-boxed-compact edit-icon-project "></span>
                </a>
              </div>
              <div className="col-md-12 col-xs-12 col-ms-12 progressbar-div">
                <div className={`progress progress-sm pbar-border-radius ${getProgress(progress)}`}
                     role="progressbar" aria-valuenow="80"
                     aria-valuemin="0" aria-valuemax="100%"
                     style={{width: progress == null? 1 + '%' : progress + '%', height: 15 + 'px'}}>
                </div>
              </div>
              <div className="project-details">
                <span className="pull-left project-name my-fonts f-r">{project.title}</span>
                <span className=" pull-right project-percentage-complete-green f-r ">
                  {progress == null ? '0' : progress}
                  <span className="percentage f-r">%</span>
                </span>
              </div>

              <EditProjectModal pitem={this.props.project}
                                handleEdit={this.props.handleEdit}
                                handleUpdate={this.onUpdate}
                                editHandleDelete={this.projectItemHandleDelete} />

            </div>
        )
    }
});